{"version":3,"file":"static/js/934.7cf1dda8.chunk.js","mappings":"sPACA,GAAgB,OAAS,2B,SCEZA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,kBAAMH,SAAUA,EAAhB,WACE,kBACEI,KAAK,OACLC,MAAOH,EACPI,QAAS,SAAAC,GAAC,OAAIJ,EAASI,EAAEC,cAAcH,MAA7B,EACVI,UAAWC,EAAAA,SAEb,mBAAQN,KAAK,SAASO,QAZN,WAClBC,YAAW,kBAAMT,EAAS,GAAf,GAAoB,IAChC,EAU+CM,UAAWC,EAAAA,OAAvD,sBAKL,E,0BCtBD,EAA4B,0BCiF5B,EA3Ee,WAAO,IAAD,IACnB,GAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GACvCC,EAAO,UAAGJ,EAAaG,IAAI,eAApB,QAA+B,EAC5C,GAA0BhB,EAAAA,EAAAA,UAASe,GAAnC,eAAOd,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAA0BnB,EAAAA,EAAAA,UAAS,MAAnC,eAAOoB,EAAP,KAAcC,EAAd,KACA,GAAwBrB,EAAAA,EAAAA,UAASsB,OAAOL,IAAxC,eAAOM,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8EACEC,EAAAA,GAAwB3B,EAAOsB,GAC5BM,MAAK,SAAAC,GACJT,EAAS,MACTF,GAAU,SAAAY,GAAU,wBAAQA,IAAR,OAAuBD,GAAvB,GACrB,IACAE,OAAM,SAAAZ,GACLC,EAAS,qCAAD,OAAsCpB,GAC/C,IARL,4CAHc,sBAcTA,KAdU,WAAD,wBAkBdgC,GACAnB,EAAgB,CAAEoB,OAAQjC,EAAOsB,KAAMA,IAExC,GAAE,CAACtB,EAAOsB,EAAMT,IAuBjB,OACE,iBAAKN,UAAWC,EAAhB,UACG,KACD,SAACX,EAAD,CAAWC,SAxBO,SAAAoC,GACpBA,EAAMC,iBAEDD,EAAM5B,cAAc8B,SAAS,GAAGjC,MAIjC+B,EAAM5B,cAAc8B,SAAS,GAAGjC,QAAUH,IAI9CkB,EAAU,IAEVK,EAAQ,GAERtB,EAASiC,EAAM5B,cAAc8B,SAAS,GAAGjC,QAXvCkC,MAAM,kBAYT,IASsB,IAAlBpB,EAAOqB,SACN,wBACGrB,EAAOsB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMpB,GAAhD,SACGgB,EAAMK,SAFFL,EAAME,GADA,MASpBvB,IAAS,yBAAMA,IACG,IAAlBF,EAAOqB,SAAgB,SAACQ,EAAA,EAAD,CAAUrC,QApBf,WACrBc,EAAQD,EAAO,EAChB,MAqBF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Searchbox/Searchbox.module.css?d41a","components/Searchbox/Searchbox.jsx","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Searchbox_button__nBW3e\"};","import { useState } from 'react';\nimport css from '../Searchbox/Searchbox.module.css';\n\nexport const Searchbox = ({ onSubmit }) => {\n  const [query, setQuery] = useState();\n\n  const handleClear = () => {\n    setTimeout(() => setQuery(''), 100);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        value={query}\n        onInput={e => setQuery(e.currentTarget.value)}\n        className={css.input}\n      />\n      <button type=\"Submit\" onClick={handleClear} className={css.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__sNK5N\"};","import * as API from '../../API/API';\nimport { useEffect, useState } from 'react';\nimport { Searchbox } from 'components/Searchbox/Searchbox';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { LoadMore } from 'components/LoadMore/LoadMore';\nimport css from '../Movies/Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get('search') ?? '';\n  const curPage = searchParams.get('page') ?? 1;\n  const [query, setQuery] = useState(filter);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(Number(curPage));\n  const location = useLocation();\n\n  useEffect(() => {\n  \n\n    async function fetchData() {\n      API.fetchSearchingFilms(query, page)\n        .then(response => {\n          setError(null);\n          setMovies(prevMovies => [...prevMovies, ...response]);\n        })\n        .catch(error => {\n          setError(`Nothing was found on your request ${query}`);\n        });\n    }\n\n    if (!query) {\n      return;\n    }\n\n    fetchData();\n    setSearchParams({ search: query, page: page });\n    \n  }, [query, page, setSearchParams]);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!event.currentTarget.elements[0].value) {\n      alert('Empty searchbar');\n      return;\n    }\n    if (event.currentTarget.elements[0].value === query) {\n      return;\n    }\n\n    setMovies([]);\n\n    setPage(1);\n\n    setQuery(event.currentTarget.elements[0].value);\n  };\n  const handleLoadMore = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <div className={css.container}>\n      {' '}\n      <Searchbox onSubmit={submitHandler} />\n      {movies.length !== 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {error && <div>{error}</div>}\n      {movies.length !== 0 && <LoadMore onClick={handleLoadMore} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Searchbox","onSubmit","useState","query","setQuery","type","value","onInput","e","currentTarget","className","css","onClick","setTimeout","useSearchParams","searchParams","setSearchParams","filter","get","curPage","movies","setMovies","error","setError","Number","page","setPage","location","useLocation","useEffect","API","then","response","prevMovies","catch","fetchData","search","event","preventDefault","elements","alert","length","map","movie","to","id","state","from","title","LoadMore"],"sourceRoot":""}